---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "code-server.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "code-server.name" . }}
    helm.sh/chart: {{ include "code-server.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "code-server.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "code-server.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.hostnameOverride }}
      hostname: {{ .Values.hostnameOverride }}
      {{- end }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- end }}
      {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
      # initContainers:
      # - name: init-chmod-data
      #   image: busybox:latest
      #   imagePullPolicy: IfNotPresent
      #   command:
      #     - sh
      #     - -c
      #     - |
      #       chown -R {{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.fsGroup }} /home/coder
      #   securityContext:
      #     runAsUser: {{ .Values.volumePermissions.securityContext.runAsUser }}
      #   volumeMounts:
      #   - name: data
      #     mountPath: /home/coder
{{- if .Values.extraInitContainers }}
{{ tpl .Values.extraInitContainers . | indent 6 }}
{{- end }}
      {{- end }}
      containers:
{{- if .Values.extraContainers }}
{{ tpl .Values.extraContainers . | indent 8 }}
{{- end }}
        {{- if .Values.oauthProxy.enabled }}
        - name: oauth-proxy
          image: "{{ .Values.oauthProxy.image.repository }}:{{ .Values.oauthProxy.image.tag }}"
          imagePullPolicy: {{ .Values.oauthProxy.image.pullPolicy }}
          {{- if .Values.oauthProxy.securityContext.enabled }}
          securityContext:
            runAsUser: {{ .Values.oauthProxy.securityContext.runAsUser }}
          {{- end }}
          env:
        {{- if .Values.extraVars }}
{{ toYaml .Values.extraVars | indent 10 }}
        {{- end }}
          - name: OAUTH2_PROXY_CLIENT_ID
            value: {{ .Values.oauthProxy.proxyClientId }}
          - name: OAUTH2_PROXY_CLIENT_SECRET
            value: {{ .Values.oauthProxy.proxyClientSecret }}
          - name: OAUTH2_PROXY_COOKIE_SECRET
            value: {{ .Values.oauthProxy.proxyCookieSecret }}
          args:
          - --provider=oidc
          - --upstream=http://localhost:{{ .Values.containerPort }}/
          - --http-address=0.0.0.0:{{ .Values.oauthProxy.containerPort }}
          - --authenticated-emails-file=/mnt/authenticated-emails.txt
          - --redirect-url=https://{{ include "code-server.domainName" . }}/oauth2/callback
          - --pass-access-token=true
          - --pass-authorization-header=true
          - --skip-auth-regex=^\/config\.json$
          - --skip-auth-regex=^\/manifest\.json$
          - --skip-auth-regex=^\/custom_style\.css$
          - --skip-auth-regex=^\/clr-ui.min\.css$
          - --skip-auth-regex=^\/clr-ui-dark.min\.css$
          - --skip-auth-regex=^\/custom_locale\.json$
          - --skip-auth-regex=^\/favicon.*\.png$
          - --skip-auth-regex=^\/favicon.*\.ico$
          - --skip-auth-regex=^\/static\/
          # - --skip-auth-regex=^\/$
          - --scope=openid email
          - --cookie-refresh=2m
          - --oidc-issuer-url={{ .Values.oauthProxy.proxyOIDCIssuerUrl }}
          - --set-authorization-header=true
        {{- if .Values.extraArgs }}
{{ toYaml .Values.extraArgs | indent 10 }}
        {{- end }}
          ports:
          - containerPort: {{ .Values.oauthProxy.containerPort }}
            name: proxy
            protocol: TCP
          resources:
            {{- toYaml .Values.oauthProxy.resources | nindent 12 }}
          volumeMounts:
          - mountPath: /mnt/authenticated-emails.txt
            name: oauth-proxy-authenticated-emails
            subPath: authenticated-emails.txt
          {{- end }}

        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # {{- if .Values.securityContext.enabled }}
          # securityContext:
          #   runAsUser: {{ .Values.securityContext.runAsUser }}
          # {{- end }}
          env:
          # - name: DEFAULT_WORKSPACE
          #   value: "/workspace"
          - name: DOCKER_MODS
            # value: linuxserver/mods:code-server-extension-arguments|linuxserver/mods:code-server-awscli|linuxserver/mods:code-server-python3|linuxserver/mods:code-server-zsh
            value: {{ .Values.dockerMods }}
          - name: VSCODE_EXTENSION_IDS
            value: {{ .Values.vscodeExtensionsIds }}
        {{- if .Values.extraVars }}
{{ toYaml .Values.extraVars | indent 10 }}
        {{- end }}

        {{- if .Values.password }}
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
              {{- if .Values.existingSecret }}
                name: {{ .Values.existingSecret }}
              {{- else }}
                name: {{ template "code-server.fullname" . }}
              {{- end }}
                key: password
        {{- end }}

        {{- if .Values.sudoPassword }}
          - name: SUDO_PASSWORD
            valueFrom:
              secretKeyRef:
              {{- if .Values.existingSecret }}
                name: {{ .Values.existingSecret }}
              {{- else }}
                name: {{ template "code-server.fullname" . }}
              {{- end }}
                key: password
        {{- end }}

        {{- if .Values.extraArgs }}
          args:
{{ toYaml .Values.extraArgs | indent 10 }}
        {{- end }}
          volumeMounts:
          # - name: data
          #   mountPath: /home/coder
          {{- range .Values.extraConfigmapMounts }}
          - name: {{ .name }}
            mountPath: {{ .mountPath }}
            subPath: {{ .subPath | default "" }}
            readOnly: {{ .readOnly }}
          {{- end }}
          {{- range .Values.extraSecretMounts }}
          - name: {{ .name }}
            mountPath: {{ .mountPath }}
            readOnly: {{ .readOnly }}
          {{- end }}
          {{- range .Values.extraVolumeMounts }}
          - name: {{ .name }}
            mountPath: {{ .mountPath }}
            subPath: {{ .subPath | default "" }}
            readOnly: {{ .readOnly }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "code-server.serviceAccountName" . }}
      volumes:
      - name: data
      {{- if .Values.persistence.enabled }}
        {{- if not .Values.persistence.hostPath }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "code-server.fullname" .) }}
        {{- else }}
        hostPath:
          path: {{ .Values.persistence.hostPath }}
          type: Directory
        {{- end -}}
      {{- else }}
        emptyDir: {}
      {{- end -}}
      {{- range .Values.extraSecretMounts }}
      - name: {{ .name }}
        secret:
          secretName: {{ .secretName }}
          defaultMode: {{ .defaultMode }}
      {{- end }}
      {{- if .Values.oauthProxy.enabled }}
      - name: oauth-proxy-authenticated-emails
        configMap:
          defaultMode: 420
          name: oauth-proxy-authenticated-emails
      {{- end }}
      {{- range .Values.extraVolumeMounts }}
      - name: {{ .name }}
        {{- if .existingClaim }}
        persistentVolumeClaim:
          claimName: {{ .existingClaim }}
        {{- else }}
        hostPath:
          path: {{ .hostPath }}
          type: Directory
        {{- end }}
      {{- end }}
